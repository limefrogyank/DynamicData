@page "/"

@using DynamicData.SignalR.JSInterop
@using DynamicData.SignalR.TestModel
@using DynamicData

@inject IJSRuntime jsRuntime

<button class="btn btn-primary" onclick=@OnAddFiveRandom>Add 5 Random</button>
<button class="btn btn-primary" onclick=@OnClearAll>Clear All</button>
@if (mainViewModel != null)
{
<select class="custom-select" bind=@mainViewModel.SelectedSort>
    <option value="0" selected>Sort Alphabetically Ascending</option>
    <option value="1">Sort Alphabetically Descending</option>
    <option value="2">Sort Age Ascending</option>
    <option value="3">Sort Age Descending</option>
</select>
}

@if (mainViewModel != null)
{
<ul>
    @foreach (var item in mainViewModel.People)
    {
    <li>
        <h3>@item.Name</h3>
        Age: @item.Age, Gender: @item.Gender
    </li>
    }
</ul>
}

@functions { 

    MainViewModel mainViewModel;


    protected override Task OnAfterRenderAsync()
    {
        if (mainViewModel == null)
        {
            mainViewModel = new MainViewModel(jsRuntime);

            mainViewModel.People.CollectionChanged += People_CollectionChanged;
        }

        return base.OnAfterRenderAsync();
    }

    private void People_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
    {
        StateHasChanged();
    }

    Task OnAddFiveRandom(UIMouseEventArgs args)
    {
        return mainViewModel.AddFiveRandom();
    }

    Task OnClearAll(UIMouseEventArgs args)
    {
        return mainViewModel.ClearAll();
    }
}
